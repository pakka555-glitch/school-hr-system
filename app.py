import os
import streamlit as st
import pandas as pd
import gspread
from google.oauth2.service_account import Credentials

# ==========================
# üîß ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
# ==========================
st.set_page_config(page_title="School HR System", page_icon="üè´", layout="wide")

ASSETS_DIR = "assets"
BANNER_PATH = os.path.join(ASSETS_DIR, "banner.jpg")

# ==========================
# üé® CSS ‡πÅ‡∏•‡∏∞‡∏ü‡∏≠‡∏ô‡∏ï‡πå
# ==========================
def inject_fonts_and_css():
    css = """
    <style>
    @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+Thai:wght@300;400;600;700&display=swap');
    html, body, [class*="css"] { font-family: 'Noto Sans Thai', sans-serif; }

    /* ‡∏Å‡∏≤‡∏£‡πå‡∏î */
    [data-testid="stContainer"] {
        border-radius: 14px !important;
        padding: 18px 20px !important;
        box-shadow: 0 6px 18px rgba(0,0,0,0.05);
        background: #fff;
        position: relative;
    }

    /* accent bar */
    [data-testid="stContainer"]:nth-of-type(1)::before {background-color:#1565C0;}
    [data-testid="stContainer"]:nth-of-type(2)::before {background-color:#6A1B9A;}
    [data-testid="stContainer"]:nth-of-type(3)::before {background-color:#01579B;}
    [data-testid="stContainer"]:nth-of-type(4)::before {background-color:#2E7D32;}
    [data-testid="stContainer"]::before {
        content:"";
        position:absolute;
        top:0; left:0; right:0; height:6px;
        border-top-left-radius:14px; border-top-right-radius:14px;
    }

    /* ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô */
    .role-body {
        min-height: 110px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    /* ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö ‚Äî ‡∏™‡∏µ‡πÄ‡∏Ç‡πâ‡∏° ‡∏™‡∏î‡πÉ‡∏™ ‡∏û‡∏£‡πâ‡∏≠‡∏° hover shadow */
    .stButton>button {
        width: 100% !important;
        color: #fff !important;
        border: none;
        border-radius: 10px;
        padding: 10px 0;
        font-weight: 600;
        font-size: 15px;
        box-shadow: 0 3px 10px rgba(0,0,0,0.1);
        transition: all 0.25s ease;
    }

    div[data-testid="column"]:nth-of-type(1) .stButton>button {background:#0D47A1;}
    div[data-testid="column"]:nth-of-type(1) .stButton>button:hover {background:#002171; box-shadow:0 4px 14px rgba(0,0,0,0.25);}

    div[data-testid="column"]:nth-of-type(2) .stButton>button {background:#7B1FA2;}
    div[data-testid="column"]:nth-of-type(2) .stButton>button:hover {background:#4A148C; box-shadow:0 4px 14px rgba(0,0,0,0.25);}

    div[data-testid="column"]:nth-of-type(3) .stButton>button {background:#004C8C;}
    div[data-testid="column"]:nth-of-type(3) .stButton>button:hover {background:#002C5F; box-shadow:0 4px 14px rgba(0,0,0,0.25);}

    div[data-testid="column"]:nth-of-type(4) .stButton>button {background:#1B5E20;}
    div[data-testid="column"]:nth-of-type(4) .stButton>button:hover {background:#0B3D02; box-shadow:0 4px 14px rgba(0,0,0,0.25);}

    /* Footer */
    .footer {text-align:center;color:gray;font-size:14px;margin-top:40px;}
    .footer img {width:20px;vertical-align:middle;margin:0 4px;opacity:0.7;}
    </style>
    """
    st.markdown(css, unsafe_allow_html=True)

# ==========================
# üîó ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° Google Sheets
# ==========================
@st.cache_resource(show_spinner=False)
def get_gs_client():
    info = dict(st.secrets["gcp_service_account"])
    scopes = [
        "https://www.googleapis.com/auth/spreadsheets",
        "https://www.googleapis.com/auth/drive.readonly",
    ]
    creds = Credentials.from_service_account_info(info, scopes=scopes)
    return gspread.authorize(creds)

@st.cache_data(ttl=60)
def load_users_df():
    try:
        client = get_gs_client()
        sheet_id = st.secrets["gsheets"]["users_sheet_id"]
        ws_name = st.secrets["gsheets"]["users_worksheet"]
        sh = client.open_by_key(sheet_id)
        ws = sh.worksheet(ws_name)
        data = ws.get_all_records()
        df = pd.DataFrame(data).fillna("")
        for col in ["teacher_id", "pin", "role", "name"]:
            if col not in df.columns: df[col] = ""
        df["teacher_id"] = df["teacher_id"].astype(str).str.strip()
        df["pin"] = df["pin"].astype(str).str.strip()
        df["role"] = df["role"].astype(str).str.lower().str.strip()
        return df
    except Exception as e:
        st.error(f"‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {e}")
        return pd.DataFrame(columns=["teacher_id","pin","role","name"])

def check_login(user_id, pin, allowed_roles):
    df = load_users_df()
    user = df[df["teacher_id"] == str(user_id).strip()]
    if user.empty: return False, None, "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ"
    u = user.iloc[0]
    if str(u["pin"]) != str(pin).strip():
        return False, None, "üîí PIN ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á"
    if allowed_roles and u["role"] not in allowed_roles:
        return False, None, "üö´ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ"
    return True, u, None

# ==========================
# üè† ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å
# ==========================
def page_home():
    if os.path.exists(BANNER_PATH):
        st.image(BANNER_PATH, use_container_width=True)

    st.markdown(
        "<h2 style='text-align:center;color:#0a3a75;'>‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏á‡∏≤‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏≠‡∏ô‡∏∏‡∏ö‡∏≤‡∏•‡∏ß‡∏±‡∏î‡∏Ñ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏ç‡πà</h2>"
        "<p style='text-align:center;color:#48617a'>‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏π‡πÅ‡∏•‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏•‡∏≤‡∏Å‡∏£‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πà‡∏á‡πÉ‡∏™‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏î‡πâ</p>",
        unsafe_allow_html=True,
    )

    col1, col2, col3, col4 = st.columns(4, gap="large")

    with col1:
        with st.container(border=True):
            st.subheader("üë©‚Äçüè´ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏£‡∏π‡∏ú‡∏π‡πâ‡∏™‡∏≠‡∏ô")
            st.markdown(
                """
                <div class="role-body">
                <ul>
                <li>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£/‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•</li>
                <li>‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏•‡∏≤/‡∏≠‡∏ö‡∏£‡∏°</li>
                <li>‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</li>
                </ul></div>
                """, unsafe_allow_html=True)
            if st.button("üîê ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏£‡∏π‡∏ú‡∏π‡πâ‡∏™‡∏≠‡∏ô", use_container_width=True):
                st.session_state["route"] = "login_teacher"
                st.rerun()

    with col2:
        with st.container(border=True):
            st.subheader("‚öôÔ∏è ‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡πÇ‡∏°‡∏î‡∏π‡∏•")
            st.markdown(
                """
                <div class="role-body">
                <ul>
                <li>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö/‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÉ‡∏ô‡πÇ‡∏°‡∏î‡∏π‡∏•</li>
                <li>‡∏î‡∏π‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡πÇ‡∏°‡∏î‡∏π‡∏•</li>
                </ul></div>
                """, unsafe_allow_html=True)
            if st.button("üîê ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡πÇ‡∏°‡∏î‡∏π‡∏•", use_container_width=True):
                st.session_state["route"] = "login_module_admin"
                st.rerun()

    with col3:
        with st.container(border=True):
            st.subheader("üõ°Ô∏è ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÉ‡∏´‡∏ç‡πà")
            st.markdown(
                """
                <div class="role-body">
                <ul>
                <li>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏∞‡∏ö‡∏ö</li>
                <li>‡∏≠‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏£‡∏ß‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£</li>
                </ul></div>
                """, unsafe_allow_html=True)
            if st.button("üîê ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÉ‡∏´‡∏ç‡πà", use_container_width=True):
                st.session_state["route"] = "login_superadmin"
                st.rerun()

    with col4:
        with st.container(border=True):
            st.subheader("üè´ ‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£ (Executive)")
            st.markdown(
                """
                <div class="role-body">
                <ul>
                <li>‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</li>
                <li>‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</li>
                </ul></div>
                """, unsafe_allow_html=True)
            if st.button("üîê ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£", use_container_width=True):
                st.session_state["route"] = "login_executive"
                st.rerun()

    st.markdown("---")
    st.markdown(
        """
        <div class="footer">
            <img src="https://cdn-icons-png.flaticon.com/512/3135/3135715.png">
            ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏î‡∏¢ <b>‡∏Ñ‡∏£‡∏π‡∏™‡∏∏‡∏û‡∏à‡∏ô‡πå ‡∏ô‡∏≤‡∏°‡πÇ‡∏Ñ‡∏ï‡∏£</b> ‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏≠‡∏ô‡∏∏‡∏ö‡∏≤‡∏•‡∏ß‡∏±‡∏î‡∏Ñ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏ç‡πà ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ï‡∏£‡∏≤‡∏î<br>
            School HR System v2 | Powered by 
            <img src="https://streamlit.io/images/brand/streamlit-mark-color.png"> Streamlit + 
            <img src="https://www.svgrepo.com/show/373589/google-sheets.svg"> Google Sheets
        </div>
        """, unsafe_allow_html=True
    )

# ==========================
# üîë Login + Portals
# ==========================
def login_page(title, roles, next_route):
    st.markdown(f"### {title}")
    with st.form("login_form"):
        uid = st.text_input("User ID / Teacher ID")
        pin = st.text_input("PIN", type="password")
        if st.form_submit_button("‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö"):
            ok, user, err = check_login(uid, pin, roles)
            if not ok: st.error(err)
            else:
                st.session_state["user"] = dict(user)
                st.session_state["route"] = next_route
                st.rerun()
    if st.button("‚¨ÖÔ∏è ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å"):
        st.session_state["route"] = "home"
        st.rerun()

def _logout_btn(): st.button("‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö", on_click=lambda: st.session_state.update({"route":"home","user":None}))

def teacher_portal():
    st.success("‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏ô‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó: ‡∏Ñ‡∏£‡∏π‡∏ú‡∏π‡πâ‡∏™‡∏≠‡∏ô"); _logout_btn()
def module_portal():
    st.success("‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏ô‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó: ‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡πÇ‡∏°‡∏î‡∏π‡∏•"); _logout_btn()
def superadmin_portal():
    st.success("‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏ô‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó: ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÉ‡∏´‡∏ç‡πà"); _logout_btn()
def executive_portal():
    st.success("‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏ô‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó: ‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£ (Executive)"); _logout_btn()

# ==========================
# üö¶ Route Controller
# ==========================
def main():
    route = st.session_state.get("route", "home")
    if route == "home": page_home()
    elif route == "login_teacher": login_page("üë©‚Äçüè´ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏£‡∏π‡∏ú‡∏π‡πâ‡∏™‡∏≠‡∏ô", ["teacher","module_admin","superadmin"], "teacher_portal")
    elif route == "login_module_admin": login_page("‚öôÔ∏è ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡πÇ‡∏°‡∏î‡∏π‡∏•", ["module_admin","superadmin"], "module_portal")
    elif route == "login_superadmin": login_page("üõ°Ô∏è ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÉ‡∏´‡∏ç‡πà", ["superadmin"], "superadmin_portal")
    elif route == "login_executive": login_page("üè´ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£ (Executive)", ["executive","superadmin"], "executive_portal")
    elif route == "teacher_portal": teacher_portal()
    elif route == "module_portal": module_portal()
    elif route == "superadmin_portal": superadmin_portal()
    elif route == "executive_portal": executive_portal()

if __name__ == "__main__":
    main()
