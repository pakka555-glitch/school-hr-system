# app.py
# -*- coding: utf-8 -*-

import os
import json
import base64
import streamlit as st
import pandas as pd

# ====== (‡∏≠‡∏≠‡∏õ‡∏ä‡∏±‡∏ô) Google Sheets backend ======
# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ ENV ‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å‡∏ä‡∏µ‡∏ï
# GOOGLE_SHEETS_ID=<Spreadsheet ID>
# GOOGLE_SERVICE_ACCOUNT_JSON=<service-account-json ‡∏ó‡∏±‡πâ‡∏á‡∏Å‡πâ‡∏≠‡∏ô>
USE_SHEETS = bool(os.getenv("GOOGLE_SHEETS_ID") and os.getenv("GOOGLE_SERVICE_ACCOUNT_JSON"))
SHEET_ID    = os.getenv("GOOGLE_SHEETS_ID", "")
SHEET_TAB   = os.getenv("GOOGLE_SHEETS_TAB", "users")  # ‡πÅ‡∏ó‡πá‡∏ö‡∏ä‡∏∑‡πà‡∏≠ users
CSV_FALLBACK_PATH = "teachers.csv"                      # ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Å‡∏£‡∏ì‡∏µ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏µ‡∏ï

# ====== Branding ======
APP_TITLE     = "‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏á‡∏≤‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏≠‡∏ô‡∏∏‡∏ö‡∏≤‡∏•‡∏ß‡∏±‡∏î‡∏Ñ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏ç‡πà"
CONTACT_EMAIL = "pakka555@gmail.com"
BRAND_PRIMARY = "#0a2342"
BRAND_MUTED   = "#445b66"

ASSETS_DIR   = "assets"
BANNER_PATH  = os.path.join(ASSETS_DIR, "banner.jpg")

# ====== Session Defaults ======
if "menu" not in st.session_state:
    st.session_state["menu"] = "‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å"

# route ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞ ‡πÄ‡∏ä‡πà‡∏ô ‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£
if "route" not in st.session_state:
    st.session_state["route"] = "home"   # home | executive

# ====== Utilities: load users from Google Sheets or CSV ======
def load_users_df() -> pd.DataFrame:
    required_cols = [
        "teacher_id", "name", "email", "department", "pin", "role", "admin_modules"
    ]
    if USE_SHEETS:
        try:
            import gspread
            from google.oauth2.service_account import Credentials

            creds_info = json.loads(os.environ["GOOGLE_SERVICE_ACCOUNT_JSON"])
            scopes = ["https://www.googleapis.com/auth/spreadsheets.readonly"]
            credentials = Credentials.from_service_account_info(creds_info, scopes=scopes)
            client = gspread.authorize(credentials)
            sh = client.open_by_key(SHEET_ID)
            ws = sh.worksheet(SHEET_TAB)
            rows = ws.get_all_records()  # list[dict]

            df = pd.DataFrame(rows)
            for c in required_cols:
                if c not in df.columns:
                    df[c] = ""
            return df.fillna("")
        except Exception as e:
            st.error(f"‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheets ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {e}")
            # ‡∏ï‡∏Å‡∏•‡∏á‡πÑ‡∏õ‡πÉ‡∏ä‡πâ CSV ‡πÅ‡∏ó‡∏ô
    # fallback -> CSV
    try:
        df = pd.read_csv(CSV_FALLBACK_PATH, dtype=str).fillna("")
        for c in required_cols:
            if c not in df.columns:
                df[c] = ""
        return df
    except Exception as e:
        st.error(f"‡∏≠‡πà‡∏≤‡∏ô {CSV_FALLBACK_PATH} ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {e}")
        return pd.DataFrame(columns=required_cols)

def get_user_by_id(tid: str):
    df = load_users_df()
    m = df[df["teacher_id"].astype(str).str.strip() == str(tid).strip()]
    return m.iloc[0].to_dict() if not m.empty else None

def check_login(tid: str, pin: str):
    if not tid or not pin:
        return False, None, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö"
    u = get_user_by_id(tid)
    if not u:
        return False, None, "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ"
    if str(u.get("pin","")).strip() != str(pin).strip():
        return False, None, "PIN ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á"
    return True, u, None

# ====== UI: Global CSS / Fonts ======
def inject_fonts_and_css():
    st.markdown(
        f"""
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+Thai:wght@300;400;500;700&display=swap" rel="stylesheet">

        <style>
          :root {{
            --brand: {BRAND_PRIMARY};
            --muted: {BRAND_MUTED};
            --bg-card: #ffffff;
            --bg-soft: #f5f8fb;
            --shadow: 0 10px 30px rgba(10,35,66,0.08);
            --radius: 14px;
          }}
          html, body, [class*="css"] {{
            font-family: 'Noto Sans Thai', system-ui, -apple-system, Segoe UI, Roboto, 'Helvetica Neue', Arial, sans-serif;
          }}
          .block-container {{ max-width: 1240px !important; }}

          .kys-banner {{
            border-radius: var(--radius);
            overflow: hidden;
            box-shadow: var(--shadow);
            margin: 6px 0 18px 0;
          }}

          .kys-title h1 {{
            margin:0; font-size: clamp(28px, 2.6vw, 38px); color: var(--brand); font-weight:800; text-align:center;
          }}
          .kys-title p {{
            margin:6px 0 0 0; color: var(--muted); text-align:center; font-size:18px;
          }}

          .kys-grid {{
            display:grid; grid-template-columns: repeat(3, 1fr);
            gap: 26px; margin-top:14px;
          }}
          @media (max-width: 1100px) {{ .kys-grid{{ grid-template-columns: repeat(2, 1fr); }} }}
          @media (max-width: 760px)  {{ .kys-grid{{ grid-template-columns: 1fr; }} }}

          .kys-card {{
            background: var(--bg-card);
            border-radius: var(--radius);
            box-shadow: var(--shadow);
            padding: 24px 22px;
            display:flex; flex-direction: column; min-height: 320px;
          }}
          .kys-card h3 {{ margin:0 0 6px 0; font-weight:800; color: var(--brand); }}
          .kys-card h4 {{ margin:0 0 10px 0; font-weight:600; color: var(--muted); }}
          .kys-card ul {{ margin: 8px 0 0 18px; color:#314657; line-height:1.6; }}

          .kys-btn {{
            display:inline-flex; align-items:center; justify-content:center; gap:8px;
            padding: 12px 16px; border-radius: 12px;
            background: var(--brand); color:#fff !important; text-decoration:none !important;
            box-shadow: var(--shadow); margin-top: 14px; min-height: 48px;
          }}
          .kys-btn:hover {{ filter:brightness(1.06); }}

          .kys-contact {{ width:100%; display:flex; justify-content:flex-end; margin-top:18px; }}
          .kys-contact a {{
            display:inline-flex; align-items:center; gap:8px; padding: 10px 14px;
            border-radius: 999px; background: #0f2748; color: #fff !important; text-decoration:none; box-shadow: var(--shadow);
          }}

          .muted {{ color: var(--muted); }}
        </style>
        """,
        unsafe_allow_html=True,
    )

# ====== Pages ======
def show_home():
    inject_fonts_and_css()

    # banner (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    if os.path.exists(BANNER_PATH):
        st.markdown('<div class="kys-banner">', unsafe_allow_html=True)
        st.image(BANNER_PATH, use_container_width=True)
        st.markdown('</div>', unsafe_allow_html=True)

    # title
    st.markdown(
        f"""
        <div class="kys-title">
          <h1>{APP_TITLE}</h1>
          <p>‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏π‡πÅ‡∏•‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏•‡∏≤‡∏Å‡∏£‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏á‡πà‡∏≤‡∏¢ ‡πÇ‡∏õ‡∏£‡πà‡∏á‡πÉ‡∏™ ‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏î‡πâ</p>
        </div>
        """,
        unsafe_allow_html=True,
    )

    # ‡∏Å‡∏≤‡∏£‡πå‡∏î 3 ‡πÉ‡∏ö‡πÄ‡∏î‡∏¥‡∏° + ‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏õ ‚Äú‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‚Äù (‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏™‡∏±‡πâ‡∏ô‡πÜ)
    col1, col2, col3 = st.columns(3, gap="large")

    with col1:
        st.markdown(
            """
            <div class="kys-card">
              <div>
                <h3>üë©‚Äçüè´ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏£‡∏π‡∏ú‡∏π‡πâ‡∏™‡∏≠‡∏ô</h3>
                <h4>Teacher</h4>
                <ul>
                  <li>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£/‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•</li>
                  <li>‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠ (‡∏•‡∏≤/‡πÑ‡∏õ‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£/‡∏≠‡∏ö‡∏£‡∏° ‡∏Ø‡∏•‡∏Ø) ‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</li>
                  <li>‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏á‡∏≤‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏• (‡∏ü‡∏≠‡∏£‡πå‡∏°/‡πÉ‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï/‡πÅ‡∏ü‡πâ‡∏°‡∏™‡∏∞‡∏™‡∏°‡∏á‡∏≤‡∏ô)</li>
                </ul>
              </div>
            """,
            unsafe_allow_html=True,
        )
        with st.form("login_teacher"):
            tid = st.text_input("Teacher ID", key="t_tid")
            pin = st.text_input("PIN", type="password", key="t_pin")
            submit_t = st.form_submit_button("üîê ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏£‡∏π")
            if submit_t:
                ok, u, err = check_login(tid, pin)
                if not ok: st.error(err)
                else:
                    if u.get("role","").strip().lower() in ["teacher","module_admin","superadmin","executive"]:
                        st.success(f"‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì {u.get('name','')}")
                        st.session_state["user"] = u
                    else:
                        st.error("‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÑ‡∏°‡πà‡∏û‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏ô‡∏µ‡πâ")
        st.markdown("</div>", unsafe_allow_html=True)

    with col2:
        st.markdown(
            """
            <div class="kys-card">
              <div>
                <h3>‚öôÔ∏è ‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡πÇ‡∏°‡∏î‡∏π‡∏•</h3>
                <h4>Module Admin</h4>
                <ul>
                  <li>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö/‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÉ‡∏ô‡πÇ‡∏°‡∏î‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö</li>
                  <li>‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô</li>
                  <li>‡∏î‡∏π‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡πÇ‡∏°‡∏î‡∏π‡∏•</li>
                </ul>
              </div>
            """,
            unsafe_allow_html=True,
        )
        with st.form("login_module_admin"):
            tid2 = st.text_input("User ID", key="m_tid")
            pin2 = st.text_input("PIN", type="password", key="m_pin")
            submit_m = st.form_submit_button("üîê ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡πÇ‡∏°‡∏î‡∏π‡∏•")
            if submit_m:
                ok, u, err = check_login(tid2, pin2)
                if not ok: st.error(err)
                else:
                    if u.get("role","").strip().lower() in ["module_admin","superadmin"]:
                        st.success(f"‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì {u.get('name','')} (‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡πÇ‡∏°‡∏î‡∏π‡∏•)")
                        st.session_state["user"] = u
                    else:
                        st.error("‡πÄ‡∏°‡∏ô‡∏π‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡πÇ‡∏°‡∏î‡∏π‡∏•‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")
        st.markdown("</div>", unsafe_allow_html=True)

    with col3:
        st.markdown(
            """
            <div class="kys-card">
              <div>
                <h3>üõ°Ô∏è ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÉ‡∏´‡∏ç‡πà</h3>
                <h4>Superadmin</h4>
                <ul>
                  <li>‡∏Å‡∏≥‡∏Å‡∏±‡∏ö‡∏î‡∏π‡πÅ‡∏•‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</li>
                  <li>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏Ñ‡∏•‡∏≤‡∏Å‡∏£/‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ</li>
                  <li>‡∏≠‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£</li>
                </ul>
              </div>
            """,
            unsafe_allow_html=True,
        )
        with st.form("login_superadmin"):
            tid3 = st.text_input("User ID", key="s_tid")
            pin3 = st.text_input("PIN", type="password", key="s_pin")
            submit_s = st.form_submit_button("üîê ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÉ‡∏´‡∏ç‡πà")
            if submit_s:
                ok, u, err = check_login(tid3, pin3)
                if not ok: st.error(err)
                else:
                    if u.get("role","").strip().lower() == "superadmin":
                        st.success(f"‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì {u.get('name','')} (‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÉ‡∏´‡∏ç‡πà)")
                        st.session_state["user"] = u
                    else:
                        st.error("‡πÄ‡∏°‡∏ô‡∏π‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÉ‡∏´‡∏ç‡πà‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")
        st.markdown("</div>", unsafe_allow_html=True)

    st.markdown("<br>", unsafe_allow_html=True)

    # ‡πÅ‡∏ñ‡∏ß‡∏•‡πà‡∏≤‡∏á: ‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏õ '‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£'
    ex1, ex2, ex3 = st.columns([1,2,1])
    with ex2:
        st.markdown(
            """
            <div class="kys-card">
              <h3>üè´ ‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£ (Executive)</h3>
              <p class="muted">‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Å‡∏≤‡∏£ / ‡∏£‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Å‡∏≤‡∏£</p>
            """,
            unsafe_allow_html=True,
        )
        if st.button("‚û°Ô∏è ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£", use_container_width=True):
            st.session_state["route"] = "executive"
            st.experimental_rerun()
        st.markdown("</div>", unsafe_allow_html=True)

    # footer
    st.markdown(
        f"""
        <div class="kys-contact">
          <a href="mailto:{CONTACT_EMAIL}">üìß ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö</a>
        </div>
        <hr style="margin-top:32px;margin-bottom:12px;border:1px solid #e0e6ec;">
        <div style='text-align:center; color:#445b66; font-size:15px;'>
            ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏î‡∏¢ <b>‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏á‡∏≤‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏• ‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏≠‡∏ô‡∏∏‡∏ö‡∏≤‡∏•‡∏ß‡∏±‡∏î‡∏Ñ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏ç‡πà ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ï‡∏£‡∏≤‡∏î</b><br>
            ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡πÉ‡∏´‡πâ‡∏ó‡∏±‡∏ô‡∏™‡∏°‡∏±‡∏¢ ‡πÇ‡∏õ‡∏£‡πà‡∏á‡πÉ‡∏™ ‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏î‡πâ
        </div>
        """,
        unsafe_allow_html=True,
    )

def show_executive_portal():
    """‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£ (‡πÅ‡∏¢‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å)"""
    inject_fonts_and_css()

    st.markdown("<h2>üè´ ‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£ (Executive)</h2>", unsafe_allow_html=True)
    st.markdown(
        "<p class='muted'>‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Å‡∏≤‡∏£ / ‡∏£‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Å‡∏≤‡∏£</p>",
        unsafe_allow_html=True,
    )

    with st.form("login_executive"):
        tid = st.text_input("Executive ID")
        pin = st.text_input("PIN", type="password")
        submit = st.form_submit_button("üîê ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£")
        if submit:
            ok, u, err = check_login(tid, pin)
            if not ok:
                st.error(err)
            else:
                role = u.get("role","").strip().lower()
                if role in ["executive", "superadmin"]:
                    st.success(f"‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏∏‡∏ì {u.get('name','')} ‚Äî ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
                    st.session_state["user"] = u
                    # TODO: ‡∏ï‡πà‡∏≠‡∏¢‡∏≠‡∏î‡πÄ‡∏°‡∏ô‡∏π / ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
                else:
                    st.error("‡πÄ‡∏°‡∏ô‡∏π‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")

    st.markdown("<br>", unsafe_allow_html=True)
    if st.button("‚¨ÖÔ∏è ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å"):
        st.session_state["route"] = "home"
        st.experimental_rerun()

def show_teacher_portal():
    inject_fonts_and_css()
    st.title("‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡∏Ñ‡∏£‡∏π)")
    st.info("‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡πÑ‡∏ß‡πâ‡∏ï‡πà‡∏≠‡∏¢‡∏≠‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°/‡πÄ‡∏°‡∏ô‡∏π‡∏¢‡πà‡∏≠‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏£‡∏π‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡∏Ñ‡∏£‡∏±‡∏ö")

def show_admin_portal():
    inject_fonts_and_css()
    st.title("‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•")
    st.info("‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡πÑ‡∏ß‡πâ‡∏ï‡πà‡∏≠‡∏¢‡∏≠‡∏î‡πÄ‡∏°‡∏ô‡∏π‡∏¢‡πà‡∏≠‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•/‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡∏Ñ‡∏£‡∏±‡∏ö")

# ====== App Entrypoint ======
def main():
    st.set_page_config(page_title=APP_TITLE, page_icon="üè´", layout="wide")

    # Sidebar menu (‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡πÑ‡∏ß‡πâ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
    with st.sidebar:
        st.markdown("### ‡πÄ‡∏°‡∏ô‡∏π")
        st.session_state["menu"] = st.radio(
            "‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤:",
            ["‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å", "‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ", "‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•"],
            index=["‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å", "‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ", "‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•"].index(st.session_state["menu"]),
            label_visibility="collapsed",
        )

    # Routing ‡∏´‡∏•‡∏±‡∏Å
    if st.session_state["route"] == "executive":
        show_executive_portal()
        return

    # ‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏ô‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏î‡∏¥‡∏°
    if st.session_state["menu"] == "‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å":
        show_home()
    elif st.session_state["menu"] == "‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ":
        show_teacher_portal()
    else:
        show_admin_portal()

if __name__ == "__main__":
    main()
