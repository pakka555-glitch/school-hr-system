import os
import base64
import pandas as pd
import streamlit as st

# ==============================
# Settings & Branding
# ==============================
APP_TITLE = "‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏á‡∏≤‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏≠‡∏ô‡∏∏‡∏ö‡∏≤‡∏•‡∏ß‡∏±‡∏î‡∏Ñ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏ç‡πà"
CONTACT_EMAIL = "pakka555@gmail.com"  # ‡∏Ñ‡∏£‡∏π‡∏™‡∏∏‡∏û‡∏à‡∏ô‡πå
BRAND_PRIMARY = "#0a2342"            # ‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡∏£‡∏°‡∏ó‡πà‡∏≤
BRAND_MUTED = "#445b66"              # ‡πÄ‡∏ó‡∏≤‡∏≠‡∏°‡∏ü‡πâ‡∏≤

ASSETS_DIR = "assets"
BANNER_PATH = os.path.join(ASSETS_DIR, "banner.jpg")
LOGO_PATH   = os.path.join(ASSETS_DIR, "logo.jpg")

# init session_state
if "menu" not in st.session_state:
    st.session_state["menu"] = "‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å"
if "route" not in st.session_state:
    st.session_state["route"] = "home"   # ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏¢‡πà‡∏≠‡∏¢ (‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ login)
if "user" not in st.session_state:
    st.session_state["user"] = None

# ------------------------------
# Auth helpers (load users, check pin)
# ------------------------------
DATA_PATH = "teachers.csv"   # ‡πÑ‡∏ü‡∏•‡πå‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ

def load_users():
    """‡∏≠‡πà‡∏≤‡∏ô users ‡∏à‡∏≤‡∏Å teachers.csv -> DataFrame"""
    try:
        df = pd.read_csv(DATA_PATH, dtype=str).fillna("")
        required = {"teacher_id","name","email","department","pin","role","admin_modules"}
        missing = required - set(df.columns)
        if missing:
            st.error(f"teachers.csv ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå: {', '.join(missing)}")
        return df
    except Exception as e:
        st.error(f"‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå users ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ: {e}")
        return pd.DataFrame(columns=["teacher_id","name","email","department","pin","role","admin_modules"])

def get_user(tid: str):
    df = load_users()
    m = df[df["teacher_id"].astype(str).str.strip() == str(tid).strip()]
    return m.iloc[0].to_dict() if not m.empty else None

def check_login(tid: str, pin: str):
    """‡∏Ñ‡∏∑‡∏ô (bool,user_dict|None, error_text|None)"""
    if not tid or not pin:
        return False, None, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö"

    u = get_user(tid)
    if not u:
        return False, None, "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ"
    if str(u["pin"]).strip() != str(pin).strip():
        return False, None, "PIN ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á"
    return True, u, None

# ==============================
# Load Google Font + Global CSS
# ==============================
def inject_fonts_and_css():
    st.markdown(
        """
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+Thai:wght@300;400;500;700&display=swap" rel="stylesheet">

        <style>
          :root{
            --brand: """ + BRAND_PRIMARY + """;
            --muted: """ + BRAND_MUTED + """;
            --bg-card: #ffffff;
            --bg-soft: #f5f8fb;
            --shadow: 0 10px 30px rgba(10,35,66,0.08);
            --radius: 14px;
          }
          html, body, [class*="css"] {
            font-family: 'Noto Sans Thai', system-ui, -apple-system, Segoe UI, Roboto, 'Helvetica Neue', Arial, sans-serif;
          }
          .block-container { max-width: 1240px !important; }

          /* Banner */
          .kys-banner {
            border-radius: var(--radius);
            overflow: hidden;
            box-shadow: var(--shadow);
            margin: 6px 0 18px 0;
          }

          /* Title */
          .kys-title h1{ margin:0; font-size: clamp(28px, 2.6vw, 38px); color: var(--brand); font-weight:800; }
          .kys-title p{ margin:6px 0 0 0; color: var(--muted); }

          /* Grid 3 ‡∏Å‡∏≤‡∏£‡πå‡∏î */
          .kys-grid{
            display:grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 26px;
            margin-top:14px;
          }
          @media (max-width: 1100px){ .kys-grid{ grid-template-columns: repeat(2, 1fr); } }
          @media (max-width: 760px){ .kys-grid{ grid-template-columns: 1fr; } }

          .kys-card{
            background: var(--bg-card);
            border-radius: var(--radius);
            box-shadow: var(--shadow);
            padding: 24px 22px;
            display:flex;
            flex-direction: column;
            min-height: 320px;
          }
          .kys-card > div { flex:1; }
          .kys-card h3{ margin:0 0 6px 0; font-weight:800; color: var(--brand); }
          .kys-card h4{ margin:0 0 10px 0; font-weight:600; color: var(--muted); }
          .kys-card ul{ margin: 8px 0 0 18px; color:#314657; line-height:1.6; }

          .kys-btn{ display:inline-flex; align-items:center; justify-content:center; gap:8px; padding:12px 16px; border-radius:12px; background:var(--brand); color:#fff !important; text-decoration:none !important; box-shadow:var(--shadow); margin-top:14px; min-height:48px; }
          .kys-btn:hover{ filter:brightness(1.06); }

          .kys-contact{ width:100%; display:flex; justify-content:flex-end; margin-top:18px; }
          .kys-contact a{ display:inline-flex; align-items:center; gap:8px; padding: 10px 14px; border-radius: 999px; background: #0f2748; color: #fff !important; text-decoration:none; box-shadow: var(--shadow); }
        </style>
        """,
        unsafe_allow_html=True,
    )

# ==============================
# Login page (new)
# ==============================
def show_login(required_role: str):
    """
    required_role: 'teacher' | 'module_admin' | 'superadmin'
    """
    inject_fonts_and_css()

    role_name = {
        "teacher": "‡∏Ñ‡∏£‡∏π‡∏ú‡∏π‡πâ‡∏™‡∏≠‡∏ô (Teacher)",
        "module_admin": "‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡πÇ‡∏°‡∏î‡∏π‡∏• (Module Admin)",
        "superadmin": "‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÉ‡∏´‡∏ç‡πà (Superadmin)",
    }[required_role]

    st.title(f"‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö ‚Äî {role_name}")

    with st.form(f"login_form_{required_role}", clear_on_submit=False):
        tid = st.text_input("User ID / Teacher ID")
        pin = st.text_input("PIN", type="password")
        submit = st.form_submit_button("‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö")

    if submit:
        ok, u, err = check_login(tid, pin)
        if not ok:
            st.error(err)
            return

        allowed = {
            "teacher": ["teacher", "module_admin", "superadmin"],
            "module_admin": ["module_admin", "superadmin"],
            "superadmin": ["superadmin"],
        }[required_role]

        user_role = u.get("role", "").strip().lower()
        if user_role not in allowed:
            st.error("‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏ô‡∏µ‡πâ")
            return

        st.success(f"‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì {u.get('name','')}")
        st.session_state["user"] = u

        # ‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
        if required_role == "teacher":
            st.session_state["menu"] = "‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ"
        else:
            st.session_state["menu"] = "‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•"

        st.session_state["route"] = "home"
        st.rerun()

    if st.button("‚Üê ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å"):
        st.session_state["route"] = "home"
        st.rerun()

# ==============================
# Pages
# ==============================
def show_home():
    inject_fonts_and_css()

    # 1) Banner (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    if os.path.exists(BANNER_PATH):
        st.markdown('<div class="kys-banner">', unsafe_allow_html=True)
        st.image(BANNER_PATH, use_container_width=True)
        st.markdown('</div>', unsafe_allow_html=True)

    # 2) Title + Subtitle
    st.markdown(
        f"""
        <div class="kys-title" style="text-align:center; margin-top:10px;">
          <h1>{APP_TITLE}</h1>
          <p style="color:{BRAND_MUTED}; font-size:18px;">
            ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏π‡πÅ‡∏•‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏•‡∏≤‡∏Å‡∏£‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢ ‡πÇ‡∏õ‡∏£‡πà‡∏á‡πÉ‡∏™ ‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏î‡πâ
          </p>
        </div>
        """,
        unsafe_allow_html=True,
    )

    # 3) ‡∏Å‡∏≤‡∏£‡πå‡∏î 3 ‡πÉ‡∏ö (‡πÉ‡∏ä‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏û‡∏≤‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Login)
    col1, col2, col3 = st.columns(3, gap="large")

    with col1:
        st.markdown(
            """
            <div class="kys-card">
              <div>
                <h3>üë©‚Äçüè´ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏£‡∏π‡∏ú‡∏π‡πâ‡∏™‡∏≠‡∏ô</h3>
                <h4>Teacher</h4>
                <ul>
                  <li>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£/‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•</li>
                  <li>‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠ (‡∏•‡∏≤/‡πÑ‡∏õ‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£/‡∏≠‡∏ö‡∏£‡∏° ‡∏Ø‡∏•‡∏Ø) ‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</li>
                  <li>‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏á‡∏≤‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏• (‡∏ü‡∏≠‡∏£‡πå‡∏°/‡πÉ‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï/‡πÅ‡∏ü‡πâ‡∏°‡∏™‡∏∞‡∏™‡∏°‡∏á‡∏≤‡∏ô)</li>
                </ul>
              </div>
            """,
            unsafe_allow_html=True,
        )
        if st.button("üîê ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏£‡∏π", key="to_login_teacher"):
            st.session_state["route"] = "login_teacher"
            st.rerun()
        st.markdown("</div>", unsafe_allow_html=True)

    with col2:
        st.markdown(
            """
            <div class="kys-card">
              <div>
                <h3>‚öôÔ∏è ‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡πÇ‡∏°‡∏î‡∏π‡∏•</h3>
                <h4>Module Admin</h4>
                <ul>
                  <li>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö/‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÉ‡∏ô‡πÇ‡∏°‡∏î‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö</li>
                  <li>‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô</li>
                  <li>‡∏î‡∏π‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡πÇ‡∏°‡∏î‡∏π‡∏•</li>
                </ul>
              </div>
            """,
            unsafe_allow_html=True,
        )
        if st.button("üîê ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡πÇ‡∏°‡∏î‡∏π‡∏•", key="to_login_module"):
            st.session_state["route"] = "login_module_admin"
            st.rerun()
        st.markdown("</div>", unsafe_allow_html=True)

    with col3:
        st.markdown(
            """
            <div class="kys-card">
              <div>
                <h3>üõ°Ô∏è ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÉ‡∏´‡∏ç‡πà</h3>
                <h4>Superadmin</h4>
                <ul>
                  <li>‡∏Å‡∏≥‡∏Å‡∏±‡∏ö‡∏î‡∏π‡πÅ‡∏•‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</li>
                  <li>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏Ñ‡∏•‡∏≤‡∏Å‡∏£/‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ</li>
                  <li>‡∏≠‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£</li>
                </ul>
              </div>
            """,
            unsafe_allow_html=True,
        )
        if st.button("üîê ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÉ‡∏´‡∏ç‡πà", key="to_login_super"):
            st.session_state["route"] = "login_superadmin"
            st.rerun()
        st.markdown("</div>", unsafe_allow_html=True)

    # 4) ‡∏õ‡∏∏‡πà‡∏°‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö
    st.markdown(
        f"""
        <div class="kys-contact">
          <a href="mailto:{CONTACT_EMAIL}">üìß ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö</a>
        </div>
        """,
        unsafe_allow_html=True,
    )

    # 5) Footer ‚Äì ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï
    st.markdown(
        """
        <hr style="margin-top:32px;margin-bottom:12px;border:1px solid #e0e6ec;">
        <div style='text-align:center; color:#445b66; font-size:15px;'>
            ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏î‡∏¢ <b>‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏á‡∏≤‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏• ‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏≠‡∏ô‡∏∏‡∏ö‡∏≤‡∏•‡∏ß‡∏±‡∏î‡∏Ñ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏ç‡πà ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ï‡∏£‡∏≤‡∏î</b><br>
            ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡πÉ‡∏´‡πâ‡∏ó‡∏±‡∏ô‡∏™‡∏°‡∏±‡∏¢ ‡πÇ‡∏õ‡∏£‡πà‡∏á‡πÉ‡∏™ ‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏î‡πâ
        </div>
        """,
        unsafe_allow_html=True,
    )

def show_teacher_portal():
    inject_fonts_and_css()
    st.title("‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡∏Ñ‡∏£‡∏π)")
    st.info("‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡πÑ‡∏ß‡πâ‡∏ï‡πà‡∏≠‡∏¢‡∏≠‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°/‡πÄ‡∏°‡∏ô‡∏π‡∏¢‡πà‡∏≠‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏£‡∏π‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡∏Ñ‡∏£‡∏±‡∏ö")

def show_admin_portal():
    inject_fonts_and_css()
    st.title("‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•")
    st.info("‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡πÑ‡∏ß‡πâ‡∏ï‡πà‡∏≠‡∏¢‡∏≠‡∏î‡πÄ‡∏°‡∏ô‡∏π‡∏¢‡πà‡∏≠‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•/‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡∏Ñ‡∏£‡∏±‡∏ö")

# ==============================
# App ‚Äî Sidebar & Routing
# ==============================
def main():
    st.set_page_config(page_title=APP_TITLE, page_icon="üè´", layout="wide")

    # ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à route ‡∏¢‡πà‡∏≠‡∏¢‡∏Å‡πà‡∏≠‡∏ô (‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤ login ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏≤‡∏á)
    route = st.session_state.get("route", "home")
    if route == "login_teacher":
        show_login("teacher"); return
    elif route == "login_module_admin":
        show_login("module_admin"); return
    elif route == "login_superadmin":
        show_login("superadmin"); return

    # Sidebar / ‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å
    with st.sidebar:
        st.markdown("### ‡πÄ‡∏°‡∏ô‡∏π")
        st.session_state["menu"] = st.radio(
            "‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤:",
            ["‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å", "‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ", "‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•"],
            index=["‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å", "‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ", "‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•"].index(st.session_state["menu"]),
            label_visibility="collapsed",
        )

    # Routing ‡∏´‡∏•‡∏±‡∏Å
    if st.session_state["menu"] == "‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å":
        show_home()
    elif st.session_state["menu"] == "‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ":
        show_teacher_portal()
    else:
        show_admin_portal()

if __name__ == "__main__":
    main()

