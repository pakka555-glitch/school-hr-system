# app.py
import streamlit as st
import pandas as pd
import gspread
from google.oauth2.service_account import Credentials

# =============== ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö ===============
st.set_page_config(page_title="School HR System", page_icon="üè´", layout="wide")

# =============== CSS/Fonts ===============
def inject_css():
    st.markdown(
        """
        <style>
          @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+Thai:wght@300;400;600;700&display=swap');
          html, body, [class*="css"] { font-family: 'Noto Sans Thai', sans-serif; }

          :root{
            --brand:#0a2342;
            --muted:#445b66;
            --soft:#f5f8fb;
            --shadow: 0 10px 30px rgba(10,35,66,0.10);
            --radius: 16px;
          }

          .kys-title{
            text-align:center;
            color:var(--brand);
            margin: 6px 0 2px 0;
            font-weight:800;
          }
          .kys-sub{
            text-align:center;
            color:var(--muted);
            margin: 0 0 22px 0;
            font-size: 15px;
          }

          /* ‡∏Å‡∏≤‡∏£‡πå‡∏î (‡πÉ‡∏ä‡πâ container ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå) */
          .kys-card{
            background:#fff;
            border-radius:var(--radius);
            box-shadow:var(--shadow);
            padding:18px 18px 14px 18px;
            height: 220px; /* ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô‡∏ó‡∏∏‡∏Å‡πÉ‡∏ö ‚Üí ‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÄ‡∏î‡∏µ‡∏¢‡∏ß */
            display:flex;
            flex-direction:column;
            justify-content:flex-start;
          }
          .kys-card h3{ margin:4px 0 10px 0; color:var(--brand); font-weight:800; }
          .kys-card ul{ margin:6px 0 0 18px; color:#314657; line-height:1.55; }

          /* ‡∏õ‡∏∏‡πà‡∏° Streamlit */
          .stButton>button{
            background:#0f57c7 !important;
            color:#fff !important;
            border-radius:12px !important;
            padding:10px 14px !important;
            box-shadow:var(--shadow) !important;
            border:0 !important;
          }
          .stButton>button:hover{ filter:brightness(1.06); }

          /* ‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á */
          .kys-btn-box .stButton>button{ width:100% !important; }

          /* ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á */
          .kys-footer{
            text-align:center; color:#5b6b7a; font-size:13px;
            margin-top: 12px;
          }
          .kys-hr{ margin-top: 8px; margin-bottom: 10px; border:0; border-top:1px solid #e7edf3; }
        </style>
        """,
        unsafe_allow_html=True,
    )

inject_css()

# =============== Google Sheets ===============
@st.cache_resource(show_spinner=False)
def get_gs_client():
    info = dict(st.secrets["gcp_service_account"])
    scopes = [
        "https://www.googleapis.com/auth/spreadsheets",
        "https://www.googleapis.com/auth/drive.readonly",
    ]
    creds = Credentials.from_service_account_info(info, scopes=scopes)
    return gspread.authorize(creds)

@st.cache_data(ttl=60)
def load_users_df():
    """‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å Google Sheets"""
    try:
        client = get_gs_client()
        sheet_id = st.secrets["gsheets"]["users_sheet_id"]
        ws_name = st.secrets["gsheets"]["users_worksheet"]
        sh = client.open_by_key(sheet_id)
        ws = sh.worksheet(ws_name)
        data = ws.get_all_records()
        df = pd.DataFrame(data).fillna("")
        if "teacher_id" in df: df["teacher_id"] = df["teacher_id"].astype(str).str.strip()
        if "pin" in df: df["pin"] = df["pin"].astype(str).str.strip()
        if "role" in df: df["role"] = df["role"].astype(str).str.lower().str.strip()
        return df
    except Exception as e:
        st.error(f"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ: {e}")
        return pd.DataFrame(columns=["teacher_id", "name", "email", "role", "pin"])

def check_login(user_id, pin, allowed_roles):
    df = load_users_df()
    user = df[df["teacher_id"] == str(user_id).strip()]
    if user.empty:
        return False, None, "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ"
    u = user.iloc[0]
    if str(u["pin"]) != str(pin).strip():
        return False, None, "üîí PIN ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á"
    if allowed_roles and u["role"] not in allowed_roles:
        return False, None, "üö´ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ"
    return True, u, None

# =============== Footer (‡∏Å‡∏±‡∏ô‡∏ã‡πâ‡∏≥) ===============
def render_footer():
    if st.session_state.get("_footer_rendered"):  # ‡∏Å‡∏±‡∏ô‡∏ã‡πâ‡∏≥
        return
    st.session_state["_footer_rendered"] = True
    st.markdown("<hr class='kys-hr'/>", unsafe_allow_html=True)
    st.markdown(
        """
        <div class="kys-footer">
          ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏î‡∏¢ <b>‡∏Ñ‡∏£‡∏π‡∏™‡∏∏‡∏û‡∏à‡∏ô‡πå ‡∏ö‡πâ‡∏≤‡∏ô‡∏Å‡∏ß‡∏±‡∏Å‡∏î‡∏≠‡∏Å</b> ‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏≠‡∏ô‡∏∏‡∏ö‡∏≤‡∏•‡∏ß‡∏±‡∏î‡∏Ñ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏ç‡πà ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ï‡∏£‡∏≤‡∏î<br/>
          School HR System v2 | Powered by Streamlit + Google Sheets
        </div>
        """,
        unsafe_allow_html=True,
    )

# =============== Routing ===============
if "route" not in st.session_state:
    st.session_state["route"] = "home"

# =============== ‡∏´‡∏ô‡πâ‡∏≤ Home ===============
def page_home():
    st.markdown("<h2 class='kys-title'>‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏á‡∏≤‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏≠‡∏ô‡∏∏‡∏ö‡∏≤‡∏•‡∏ß‡∏±‡∏î‡∏Ñ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏ç‡πà</h2>", unsafe_allow_html=True)
    st.markdown(
        "<div class='kys-sub'>‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏π‡πÅ‡∏•‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏•‡∏≤‡∏Å‡∏£‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏á‡πà‡∏≤‡∏¢ ‡πÇ‡∏õ‡∏£‡πà‡∏á‡πÉ‡∏™ ‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏î‡πâ</div>",
        unsafe_allow_html=True,
    )

    c1, c2, c3, c4 = st.columns(4, gap="large")

    # --- Card 1: Teacher ---
    with c1:
        st.markdown("<div class='kys-card'>"
                    "<h3>üë©‚Äçüè´ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏£‡∏π‡∏ú‡∏π‡πâ‡∏™‡∏≠‡∏ô</h3>"
                    "<ul>"
                    "<li>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£/‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•</li>"
                    "<li>‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏•‡∏≤/‡∏≠‡∏ö‡∏£‡∏°</li>"
                    "<li>‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</li>"
                    "</ul>"
                    "</div>", unsafe_allow_html=True)
        st.container().markdown("", unsafe_allow_html=True)  # no-op
        with st.container():  # ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏õ‡∏∏‡πà‡∏° (‡πÄ‡∏ï‡πá‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡πÄ‡∏ó‡πà‡∏≤ ‡πÜ ‡∏Å‡∏±‡∏ô)
            st.markdown("<div class='kys-btn-box'>", unsafe_allow_html=True)
            if st.button("üîê ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏£‡∏π‡∏ú‡∏π‡πâ‡∏™‡∏≠‡∏ô", use_container_width=True, key="btn_t"):
                st.session_state["route"] = "login_teacher"
                st.rerun()
            st.markdown("</div>", unsafe_allow_html=True)

    # --- Card 2: Module Admin ---
    with c2:
        st.markdown("<div class='kys-card'>"
                    "<h3>‚öôÔ∏è ‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡πÇ‡∏°‡∏î‡∏π‡∏•</h3>"
                    "<ul>"
                    "<li>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö/‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÉ‡∏ô‡πÇ‡∏°‡∏î‡∏π‡∏•</li>"
                    "<li>‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡πÇ‡∏°‡∏î‡∏π‡∏•</li>"
                    "</ul>"
                    "</div>", unsafe_allow_html=True)
        with st.container():
            st.markdown("<div class='kys-btn-box'>", unsafe_allow_html=True)
            if st.button("üîê ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡πÇ‡∏°‡∏î‡∏π‡∏•", use_container_width=True, key="btn_m"):
                st.session_state["route"] = "login_module_admin"
                st.rerun()
            st.markdown("</div>", unsafe_allow_html=True)

    # --- Card 3: Superadmin ---
    with c3:
        st.markdown("<div class='kys-card'>"
                    "<h3>üõ°Ô∏è ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÉ‡∏´‡∏ç‡πà</h3>"
                    "<ul>"
                    "<li>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏∞‡∏ö‡∏ö</li>"
                    "<li>‡∏≠‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏£‡∏ß‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£</li>"
                    "</ul>"
                    "</div>", unsafe_allow_html=True)
        with st.container():
            st.markdown("<div class='kys-btn-box'>", unsafe_allow_html=True)
            if st.button("üîê ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÉ‡∏´‡∏ç‡πà", use_container_width=True, key="btn_s"):
                st.session_state["route"] = "login_superadmin"
                st.rerun()
            st.markdown("</div>", unsafe_allow_html=True)

    # --- Card 4: Executive ---
    with c4:
        st.markdown("<div class='kys-card'>"
                    "<h3>üè´ ‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£ (Executive)</h3>"
                    "<ul>"
                    "<li>‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</li>"
                    "<li>‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</li>"
                    "</ul>"
                    "</div>", unsafe_allow_html=True)
        with st.container():
            st.markdown("<div class='kys-btn-box'>", unsafe_allow_html=True)
            if st.button("üîê ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£", use_container_width=True, key="btn_e"):
                st.session_state["route"] = "login_executive"
                st.rerun()
            st.markdown("</div>", unsafe_allow_html=True)

    render_footer()

# =============== ‡∏´‡∏ô‡πâ‡∏≤ Login (‡∏£‡∏ß‡∏° 4 ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó) ===============
def login_page(title, roles, next_route):
    st.markdown(f"<h3 class='kys-title' style='margin-bottom:12px'>{title}</h3>", unsafe_allow_html=True)
    with st.form("login_form"):
        uid = st.text_input("User ID / Teacher ID")
        pin = st.text_input("PIN", type="password")
        ok = st.form_submit_button("‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö")
        if ok:
            success, user, err = check_login(uid, pin, roles)
            if not success:
                st.error(err)
            else:
                st.success(f"‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì {user.get('name','')}")
                st.session_state["user"] = dict(user)
                st.session_state["route"] = next_route
                st.rerun()
    st.button("‚¨ÖÔ∏è ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å", on_click=lambda: st.session_state.update({"route": "home"}))
    render_footer()

# =============== Portal ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á (‡∏Ñ‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏¥‡∏°) ===============
def teacher_portal():
    st.success("‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏ô‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó: ‡∏Ñ‡∏£‡∏π‡∏ú‡∏π‡πâ‡∏™‡∏≠‡∏ô")
    st.info("‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡πÑ‡∏ß‡πâ‡∏ï‡πà‡∏≠‡∏¢‡∏≠‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°/‡πÄ‡∏°‡∏ô‡∏π‡∏¢‡πà‡∏≠‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏£‡∏π")
    st.button("‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö", on_click=lambda: st.session_state.update({"route": "home"}))
    render_footer()

def module_portal():
    st.success("‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏ô‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó: ‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡πÇ‡∏°‡∏î‡∏π‡∏•")
    st.info("‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡πÑ‡∏ß‡πâ‡∏ï‡πà‡∏≠‡∏¢‡∏≠‡∏î‡πÄ‡∏°‡∏ô‡∏π‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡πÇ‡∏°‡∏î‡∏π‡∏•")
    st.button("‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö", on_click=lambda: st.session_state.update({"route": "home"}))
    render_footer()

def superadmin_portal():
    st.success("‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏ô‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó: ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÉ‡∏´‡∏ç‡πà")
    st.info("‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡πÑ‡∏ß‡πâ‡∏ï‡πà‡∏≠‡∏¢‡∏≠‡∏î‡πÄ‡∏°‡∏ô‡∏π‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÉ‡∏´‡∏ç‡πà")
    st.button("‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö", on_click=lambda: st.session_state.update({"route": "home"}))
    render_footer()

def executive_portal():
    st.success("‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏ô‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó: ‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£ (Executive)")
    st.info("‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡πÑ‡∏ß‡πâ‡∏ï‡πà‡∏≠‡∏¢‡∏≠‡∏î‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£")
    st.button("‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö", on_click=lambda: st.session_state.update({"route": "home"}))
    render_footer()

# =============== Route Controller ===============
def main():
    route = st.session_state.get("route", "home")
    if route == "home":
        page_home()
    elif route == "login_teacher":
        login_page("üë©‚Äçüè´ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏£‡∏π‡∏ú‡∏π‡πâ‡∏™‡∏≠‡∏ô", ["teacher", "module_admin", "superadmin"], "teacher_portal")
    elif route == "login_module_admin":
        login_page("‚öôÔ∏è ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡πÇ‡∏°‡∏î‡∏π‡∏•", ["module_admin", "superadmin"], "module_portal")
    elif route == "login_superadmin":
        login_page("üõ°Ô∏è ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÉ‡∏´‡∏ç‡πà", ["superadmin"], "superadmin_portal")
    elif route == "login_executive":
        login_page("üè´ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£ (Executive)", ["executive", "superadmin"], "executive_portal")
    elif route == "teacher_portal":
        teacher_portal()
    elif route == "module_portal":
        module_portal()
    elif route == "superadmin_portal":
        superadmin_portal()
    elif route == "executive_portal":
        executive_portal()

if __name__ == "__main__":
    main()
